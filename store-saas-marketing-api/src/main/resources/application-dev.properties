## spring
spring.application.name=store-saas-marketing-1
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
## common
common.enable-spring-context-holder=true
common.enable-mdc-filter=true
common.enable-swagger=true

## httpClient
common.enable-http-client=true
common.http.client.connectTimeout=1000
common.http.client.readTimeout=30000
common.http.client.maxConnTotal=3000
common.http.client.maxConnPerRoute=500

##开启okhttp3
feign.httpclient.enabled=false
feign.okhttp.enabled=true
common.okhttp.client.connectTimeout=1000
common.okhttp.client.readTimeout=30000
common.okhttp.client.writeTimeout=30000

##线程池配置
executor.conf.corePoolSize=10
executor.conf.maxPoolSize=20
executor.conf.queueCapacity=200
executor.conf.keepAliveSeconds=60
executor.conf.waitForTasksToCompleteOnShutdown=true
executor.conf.awaitTerminationSeconds=60
executor.conf.threadNamePrefix=testExecutor-
executor.conf.rejectionPolicyName=AbortPolicy

## server
server.port=8006
server.tomcat.maxThreads=300
server.tomcat.minSpareThreads=20
server.tomcat.maxConnections=10000
server.tomcat.acceptCount=1000
server.tomcat.accesslog.enabled=false
server.tomcat.accesslog.prefix=access_log
server.tomcat.basedir=/data/webroot/store-saas-marketing/server
server.tomcat.protocol_header=x-forwarded-proto
server.use-forward-headers=true

## eureka
eureka.client.serviceUrl.defaultZone=http://172.17.7.15:8080/eureka/
# 心跳包间隔时间,默认3次
eureka.instance.leaseRenewalIntervalInSeconds=30
# healthcheck 开启健康检查（需要spring-boot-starter-actuator依赖）
eureka.client.healthcheck.enabled=true
eureka.instance.health-check-url-path=/actuator/health
#eureka client刷新本地缓存时间
# 默认30s
eureka.client.registryFetchIntervalSeconds=30
eureka.instance.prefer-ip-address = true
#eureka客户端ribbon刷新时间
# 默认30s
ribbon.ServerListRefreshInterval=30000
# 总是展示详细信息
management.endpoint.health.show-details=ALWAYS
# 选择暴露的端点
#management.endpoints.web.exposure.include=info,health,env,beans
# 暴露所有端点
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=env
## springcloud
spring.cloud.loadbalancer.retry.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 500
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests = 1000
hystrix.command.default.circuitBreaker.requestVolumeThreshold=1000
hystrix.threadpool.default.coreSize=500
hystrix.threadpool.default.maxQueueSize=1000
hystrix.threadpool.default.queueSizeRejectionThreshold=1000
feign.hystrix.enabled=true
ribbon.ReadTimeout=5000
ribbon.ConnectTimeout=5000
ribbon.OkToRetryOnAllOperations=false
ribbon.retryableStatusCodes = 4,5
ribbon.okToRetryOnConnectErrors = true
ribbon.MaxAutoRetries=2
ribbon.MaxAutoRetriesNextServer=1
#store-saas-marketing-api.ribbon.OkToRetryOnAllOperations=false
# 开启信号量
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
#hystrix.command.HelloRemote#hello(String).execution.isolation.thread.timeoutInMilliseconds=500
## sentry
sentry.enable=false

## elk
elk.enable=false
elk.host=172.17.7.10
elk.port=5672
elk.username=admin
elk.password=admin
elk.virtualHost=/dev
elk.exchange=saas-mall-monitor
elk.queue=saas-mall-monitor
elk.routingKey=saas-mall-monitor
elk.identifier=store-saas-marketing
elk.buff.type = kafka
elk.clientProvidedName=store-saas-marketing

## spring redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=172.17.7.17
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=SN6Xy3d1JY
# 连接超时时间（毫秒）
spring.redis.timeout=30000ms
# Redis站点前缀
spring.redis.prefix=store-saas-marketing.tuhu.local:

## druid
rw.jdbc.ds.prefix=marketing
marketing.rw.jdbc.datasource.primary=true
druid.datasource.enable-monitor=true
marketing.druid.datasource.url=jdbc:mysql://172.17.7.4:3306/store_saas_marketing?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
marketing.druid.datasource.username=common_saas
marketing.druid.datasource.password=gNsvFER2RNLrAmBt485yDy+E05rCDu8TTD/gTKo8BZ6HZEQKBmL+jmYhThTua6ZGp1sybGo0sEjc1HTgPtldFQ==
marketing.druid.datasource.pwd-public-key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAI4vRezNS7MOjq8jgJmFXZv2YOOHhc+b7eX1Dsgg0u+0Jb29/aRJTeoOpGvF1sm85hUJbJW3jDe2DoQfv6L0m08CAwEAAQ==
marketing.druid.datasource.initial-size=5
marketing.druid.datasource.max-active=100
marketing.druid.datasource.min-idle=5
marketing.druid.datasource.slowSqlMillis=1000


## pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=false
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
pagehelper.pageSizeZero=true
pagehelper.autoRuntimeDialect = true

## mysql mybatis-plus begin
# 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mysql.mybatis-plus.global-config.id-type=2
# 字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mysql.mybatis-plus.global-config.field-strategy=2
# logic
mysql.mybatis-plus.global-config.logic-delete-value=1
mysql.mybatis-plus.global-config.logic-not-delete-value=0
mysql.mybatis-plus.global-config.sql-injector=com.baomidou.mybatisplus.mapper.LogicSqlInjector
# 驼峰下划线转换
mysql.mybatis-plus.global-config.db-column-underline=true
# 配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
mysql.mybatis-plus.configuration.map-underscore-to-camel-case=true
mysql.mybatis-plus.configuration.cache-enabled=false
mysql.mybatis-plus.configuration.jdbc-type-for-null=null
mysql.mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
## mysql mybatis-plus end

## mssql mybatis-plus begin
# 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mssql.mybatis-plus.global-config.id-type=2
# 字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mssql.mybatis-plus.global-config.field-strategy=2
# 驼峰下划线转换
mssql.mybatis-plus.global-config.db-column-underline=false
# with NoLock
mssql.mybatis-plus.global-config.logic-delete-value=1
mssql.mybatis-plus.global-config.logic-not-delete-value=0
mssql.mybatis-plus.global-config.sql-injector=com.tuhu.base.injector.NoLockSqlInjector
# 配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
mssql.mybatis-plus.configuration.map-underscore-to-camel-case=false
mssql.mybatis-plus.configuration.cache-enabled=false
mssql.mybatis-plus.configuration.jdbc-type-for-null=null
mssql.mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
##mssql mybatis-plus end

## rabbitmq
#spring.rabbitmq.host=172.16.20.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=test
#spring.rabbitmq.password=itsme999
#spring.rabbitmq.virtual-host=/dev

# rabbitmq消息确认
#spring.rabbitmq.publisher-confirms=true
#spring.rabbitmq.publisher-returns=true

feign.interceptor.ignore = remotename,remoteendpoint,traceNo,scClientIp,cache-control,user-agent,accept,accept-encoding,content-length,connection,forwarded,x-forwarded-for,x-forwarded-proto,x-forwarded-port,content-type

graceful.shutdown.redis.host = 172.17.7.17
graceful.shutdown.redis.port = 6379
graceful.shutdown.redis.database = 8
graceful.shutdown.redis.timeout = 1000ms
graceful.shutdown.redis.password=SN6Xy3d1JY
graceful.shutdown.profile = local

soter.filter.enable = false


tuhu.img.upload=http://wcf.tuhu.work:9010/Utility/FileUpload/UploadImage
feign.application.crmServer.name=store-saas-crm
feign.application.orderServer.name=store-saas-order
feign.application.saas.base.user.name=saas-base-user
feign.application.saas.auth.name = store-saas-auth

#云通信短信服务
saas.sms.yuntongxun.accountsid = 8a48b5514d32a2a8014d75e74b2630ef
saas.sms.yuntongxun.authtoken = 5221c4f271c74d348d58d1e3a0b86ded
saas.sms.yuntongxun.baseurl = https://app.cloopen.com:8883/2013-12-26/Accounts/%s/SMS/TemplateSMS?sig=%s
saas.sms.yuntongxun.appid = 8a216da8662360a401667c2891a32744

# xxl
xxl.job.executor.appname=store-saas-marketing-job-executor-dev
xxl.job.executor.ip=172.17.7.29
xxl.job.executor.port=10924
xxl.job.accessToken=
xxl.job.admin.addresses=http://172.17.7.15:9191/xxl-job-admin
xxl.job.executor.logretentiondays=-1
xxl.job.executor.logpath=/data/logs/store-saas-report/xxl-job/jobhandler


#门店默认营业时间
store.open.time.begin=10:00:00
store.open.time.end=18:00:00

#gateway
gateway.url=https://shop-gateway.tuhu.work/saas-api/route
client.name=saas-marketing
